/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function CDF(props) {
  const { nodes, materials } = useGLTF("/CDF.glb");
  const CDFDrone = useRef();

  useFrame(({ clock }) => {
    CDFDrone.current.position.y = 0.02 * Math.sin(2 * clock.getElapsedTime());
  });
  return (
    <group ref={CDFDrone} {...props} dispose={null}>
      <group
        position={[0, -0.1, 0]}
        rotation={[Math.PI / 2, Math.PI, 0]}
        scale={0.06}
      >
        <group position={[0, -0.6, 1.82]} rotation={[-0.38, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes["CDF-Body-1"].geometry}
            material={materials["CDF-Body-textures"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes["CDF-Body-2"].geometry}
            material={materials["CDF-Body-textures"]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/CDF.glb");
